<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/books/create"
@rendermode InteractiveServer
@using System
@using HirefyAI.Domain.Entities
@using DataTransferObjects.Books
@using Services.Books
@inject IBooksService BookService
@inject NavigationManager NavigationManager

<h3>Create New Book</h3>

<EditForm FormName="BookCreationDto" Model="@book" OnValidSubmit="() => HandleValidSubmit()">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="book.Name" />
        <ValidationMessage For="@(() => book.Name)" />
    </div>
    <div class="form-group mb-3">
        <label for="author">Author:</label>
        <InputText id="author" class="form-control" @bind-Value="book.Author" />
        <ValidationMessage For="@(() => book.Author)" />
    </div>
    <div class="form-group mb-3">
        <label for="type">Type:</label>
        <InputSelect id="type" class="form-control" @bind-Value="book.Type">
            @foreach (var value in Enum.GetValues(typeof(BookType)))
            {
                <option value="@value">@value</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => book.Type)" />
    </div>
    <div class="form-group mb-3">
        <label for="createdby">CreatedBy:</label>
        <InputText id="createdby" class="form-control" @bind-Value="book.CreatedBy" />
        <ValidationMessage For="@(() => book.CreatedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="created">Created:</label>
        <InputDate id="created" class="form-control" @bind-Value="book.Created" />
        <ValidationMessage For="@(() => book.Created)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodifiedby">LastModifiedBy:</label>
        <InputText id="lastmodifiedby" class="form-control" @bind-Value="book.LastModifiedBy" />
        <ValidationMessage For="@(() => book.LastModifiedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodified">LastModified:</label>
        <InputDate id="lastmodified" class="form-control" @bind-Value="book.LastModified" />
        <ValidationMessage For="@(() => book.LastModified)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public BookCreationDto book { get; set; } = new BookCreationDto();

    private async Task HandleValidSubmit()
    {
        await BookService.AddAsync(book);
        NavigationManager.NavigateTo("/books");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/books");
    }
}
