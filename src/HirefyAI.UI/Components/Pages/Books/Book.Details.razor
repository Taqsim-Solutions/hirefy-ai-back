<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/books/{id:long}"
@rendermode InteractiveServer
@using System
@using HirefyAI.Domain.Entities
@using DataTransferObjects.Books
@using Services.Books
@inject IBooksService BookService
@inject NavigationManager NavigationManager

<h3>Book Details</h3>

@if (book == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">Name</dt>
        @if(@book.Name != default)
        {
            <dd class="col-sm-9">@book.Name</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Author</dt>
        @if(@book.Author != default)
        {
            <dd class="col-sm-9">@book.Author</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Type</dt>
        @if(@book.Type != default)
        {
            <dd class="col-sm-9">@book.Type</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">CreatedBy</dt>
        @if(@book.CreatedBy != default)
        {
            <dd class="col-sm-9">@book.CreatedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Created</dt>
        @if(@book.Created != default)
        {
            <dd class="col-sm-9">@book.Created</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModifiedBy</dt>
        @if(@book.LastModifiedBy != default)
        {
            <dd class="col-sm-9">@book.LastModifiedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModified</dt>
        @if(@book.LastModified != default)
        {
            <dd class="col-sm-9">@book.LastModified</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

    </dl>
    <div>
        <button class="btn btn-primary" @onclick="Save">Save</button>
        <button class="btn btn-secondary" @onclick="BackToList">Back to List</button>
    </div>
}

@code {
    [Parameter]
    public long Id { get; set; }

    private BookViewModel? book;

    protected override async Task OnParametersSetAsync()
    {
        book = await BookService.GetByIdAsync(Id);
    }

    private void Save()
    {
        throw new NotImplementedException("Save functionality is not implemented.");
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/books");
    }
}
