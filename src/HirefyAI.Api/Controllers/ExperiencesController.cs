//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Experiences;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Experiences;
using HirefyAI.Domain.Entities;
using Microsoft.AspNetCore.Authorization;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize]
    public class ExperiencesController : ControllerBase
    {
        private readonly IExperiencesService _experiencesService;
        public ExperiencesController(IExperiencesService experiencesService)
        {
            _experiencesService = experiencesService;
        }

        [HttpPost]
        public async Task<Result<ExperienceViewModel>> AddAsync(ExperienceCreationDto experienceCreationDto)
        {
            return Result<ExperienceViewModel>.Success(await _experiencesService.AddAsync(experienceCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<ExperienceViewModel>>> GetAllAsync()
        {
            return Result<List<ExperienceViewModel>>.Success(await _experiencesService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<ExperienceViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<ExperienceViewModel>>.Success(await _experiencesService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<ExperienceViewModel>> GetByIdAsync(int id)
        {
            return Result<ExperienceViewModel>.Success(await _experiencesService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<ExperienceViewModel>> UpdateAsync(int id, ExperienceModificationDto experienceModificationDto)
        {
            return Result<ExperienceViewModel>.Success(await _experiencesService.UpdateAsync(id, experienceModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<ExperienceViewModel>> DeleteAsync(int id)
        {
            return Result<ExperienceViewModel>.Success(await _experiencesService.DeleteAsync(id));
        }
    }
}