//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Skills;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Skills;
using HirefyAI.Domain.Entities;
using Microsoft.AspNetCore.Authorization;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize]
    public class SkillsController : ControllerBase
    {
        private readonly ISkillsService _skillsService;
        public SkillsController(ISkillsService skillsService)
        {
            _skillsService = skillsService;
        }

        [HttpPost]
        public async Task<Result<SkillViewModel>> AddAsync(SkillCreationDto skillCreationDto)
        {
            return Result<SkillViewModel>.Success(await _skillsService.AddAsync(skillCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<SkillViewModel>>> GetAllAsync()
        {
            return Result<List<SkillViewModel>>.Success(await _skillsService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<SkillViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<SkillViewModel>>.Success(await _skillsService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<SkillViewModel>> GetByIdAsync(int id)
        {
            return Result<SkillViewModel>.Success(await _skillsService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<SkillViewModel>> UpdateAsync(int id, SkillModificationDto skillModificationDto)
        {
            return Result<SkillViewModel>.Success(await _skillsService.UpdateAsync(id, skillModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<SkillViewModel>> DeleteAsync(int id)
        {
            return Result<SkillViewModel>.Success(await _skillsService.DeleteAsync(id));
        }
    }
}