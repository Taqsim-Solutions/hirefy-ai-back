//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Templates;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Templates;
using HirefyAI.Domain.Entities;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class TemplatesController : ControllerBase
    {
        private readonly ITemplatesService _templatesService;
        public TemplatesController(ITemplatesService templatesService)
        {
            _templatesService = templatesService;
        }

        [HttpPost]
        public async Task<Result<TemplateViewModel>> AddAsync(TemplateCreationDto templateCreationDto)
        {
            return Result<TemplateViewModel>.Success(await _templatesService.AddAsync(templateCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<TemplateViewModel>>> GetAllAsync()
        {
            return Result<List<TemplateViewModel>>.Success(await _templatesService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<TemplateViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<TemplateViewModel>>.Success(await _templatesService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<TemplateViewModel>> GetByIdAsync(int id)
        {
            return Result<TemplateViewModel>.Success(await _templatesService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<TemplateViewModel>> UpdateAsync(int id, TemplateModificationDto templateModificationDto)
        {
            return Result<TemplateViewModel>.Success(await _templatesService.UpdateAsync(id, templateModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<TemplateViewModel>> DeleteAsync(int id)
        {
            return Result<TemplateViewModel>.Success(await _templatesService.DeleteAsync(id));
        }
    }
}